<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="stock.history.dal.mapper.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="stock.history.dal.model.OrderInfo" >
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="trade_date" property="tradeDate" jdbcType="DATE" />
    <result column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="end_price" property="endPrice" jdbcType="DECIMAL" />
    <result column="top_price" property="topPrice" jdbcType="DECIMAL" />
    <result column="bottom_price" property="bottomPrice" jdbcType="DECIMAL" />
    <result column="begin_price" property="beginPrice" jdbcType="DECIMAL" />
    <result column="previous_price" property="previousPrice" jdbcType="DECIMAL" />
    <result column="shake_price" property="shakePrice" jdbcType="DECIMAL" />
    <result column="shake_rate" property="shakeRate" jdbcType="DECIMAL" />
    <result column="turn_rate" property="turnRate" jdbcType="DECIMAL" />
    <result column="trade_quote" property="tradeQuote" jdbcType="DECIMAL" />
    <result column="trade_amount" property="tradeAmount" jdbcType="DECIMAL" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="unfrozen_amount" property="unfrozenAmount" jdbcType="DECIMAL" />
    <result column="trade_number" property="tradeNumber" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, trade_date, stock_id, end_price, top_price, bottom_price, begin_price, 
    previous_price, shake_price, shake_rate, turn_rate, trade_quote, trade_amount, total_amount, 
    unfrozen_amount, trade_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="stock.history.dal.model.OrderInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from order_info
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="stock.history.dal.model.OrderInfoExample" >
    delete from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="stock.history.dal.model.OrderInfo" >
    insert into order_info (order_id, trade_date, stock_id, 
      end_price, top_price, bottom_price, 
      begin_price, previous_price, shake_price, 
      shake_rate, turn_rate, trade_quote, 
      trade_amount, total_amount, unfrozen_amount, 
      trade_number)
    values (#{orderId,jdbcType=VARCHAR}, #{tradeDate,jdbcType=DATE}, #{stockId,jdbcType=VARCHAR}, 
      #{endPrice,jdbcType=DECIMAL}, #{topPrice,jdbcType=DECIMAL}, #{bottomPrice,jdbcType=DECIMAL}, 
      #{beginPrice,jdbcType=DECIMAL}, #{previousPrice,jdbcType=DECIMAL}, #{shakePrice,jdbcType=DECIMAL}, 
      #{shakeRate,jdbcType=DECIMAL}, #{turnRate,jdbcType=DECIMAL}, #{tradeQuote,jdbcType=DECIMAL}, 
      #{tradeAmount,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{unfrozenAmount,jdbcType=DECIMAL}, 
      #{tradeNumber,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="stock.history.dal.model.OrderInfo" >
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="tradeDate != null" >
        trade_date,
      </if>
      <if test="stockId != null" >
        stock_id,
      </if>
      <if test="endPrice != null" >
        end_price,
      </if>
      <if test="topPrice != null" >
        top_price,
      </if>
      <if test="bottomPrice != null" >
        bottom_price,
      </if>
      <if test="beginPrice != null" >
        begin_price,
      </if>
      <if test="previousPrice != null" >
        previous_price,
      </if>
      <if test="shakePrice != null" >
        shake_price,
      </if>
      <if test="shakeRate != null" >
        shake_rate,
      </if>
      <if test="turnRate != null" >
        turn_rate,
      </if>
      <if test="tradeQuote != null" >
        trade_quote,
      </if>
      <if test="tradeAmount != null" >
        trade_amount,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="unfrozenAmount != null" >
        unfrozen_amount,
      </if>
      <if test="tradeNumber != null" >
        trade_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="tradeDate != null" >
        #{tradeDate,jdbcType=DATE},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="endPrice != null" >
        #{endPrice,jdbcType=DECIMAL},
      </if>
      <if test="topPrice != null" >
        #{topPrice,jdbcType=DECIMAL},
      </if>
      <if test="bottomPrice != null" >
        #{bottomPrice,jdbcType=DECIMAL},
      </if>
      <if test="beginPrice != null" >
        #{beginPrice,jdbcType=DECIMAL},
      </if>
      <if test="previousPrice != null" >
        #{previousPrice,jdbcType=DECIMAL},
      </if>
      <if test="shakePrice != null" >
        #{shakePrice,jdbcType=DECIMAL},
      </if>
      <if test="shakeRate != null" >
        #{shakeRate,jdbcType=DECIMAL},
      </if>
      <if test="turnRate != null" >
        #{turnRate,jdbcType=DECIMAL},
      </if>
      <if test="tradeQuote != null" >
        #{tradeQuote,jdbcType=DECIMAL},
      </if>
      <if test="tradeAmount != null" >
        #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="unfrozenAmount != null" >
        #{unfrozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeNumber != null" >
        #{tradeNumber,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="stock.history.dal.model.OrderInfoExample" resultType="java.lang.Integer" >
    select count(*) from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_info
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeDate != null" >
        trade_date = #{record.tradeDate,jdbcType=DATE},
      </if>
      <if test="record.stockId != null" >
        stock_id = #{record.stockId,jdbcType=VARCHAR},
      </if>
      <if test="record.endPrice != null" >
        end_price = #{record.endPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.topPrice != null" >
        top_price = #{record.topPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.bottomPrice != null" >
        bottom_price = #{record.bottomPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.beginPrice != null" >
        begin_price = #{record.beginPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.previousPrice != null" >
        previous_price = #{record.previousPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.shakePrice != null" >
        shake_price = #{record.shakePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.shakeRate != null" >
        shake_rate = #{record.shakeRate,jdbcType=DECIMAL},
      </if>
      <if test="record.turnRate != null" >
        turn_rate = #{record.turnRate,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeQuote != null" >
        trade_quote = #{record.tradeQuote,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeAmount != null" >
        trade_amount = #{record.tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.unfrozenAmount != null" >
        unfrozen_amount = #{record.unfrozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeNumber != null" >
        trade_number = #{record.tradeNumber,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_info
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      trade_date = #{record.tradeDate,jdbcType=DATE},
      stock_id = #{record.stockId,jdbcType=VARCHAR},
      end_price = #{record.endPrice,jdbcType=DECIMAL},
      top_price = #{record.topPrice,jdbcType=DECIMAL},
      bottom_price = #{record.bottomPrice,jdbcType=DECIMAL},
      begin_price = #{record.beginPrice,jdbcType=DECIMAL},
      previous_price = #{record.previousPrice,jdbcType=DECIMAL},
      shake_price = #{record.shakePrice,jdbcType=DECIMAL},
      shake_rate = #{record.shakeRate,jdbcType=DECIMAL},
      turn_rate = #{record.turnRate,jdbcType=DECIMAL},
      trade_quote = #{record.tradeQuote,jdbcType=DECIMAL},
      trade_amount = #{record.tradeAmount,jdbcType=DECIMAL},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      unfrozen_amount = #{record.unfrozenAmount,jdbcType=DECIMAL},
      trade_number = #{record.tradeNumber,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="stock.history.dal.model.OrderInfo" >
    update order_info
    <set >
      <if test="tradeDate != null" >
        trade_date = #{tradeDate,jdbcType=DATE},
      </if>
      <if test="stockId != null" >
        stock_id = #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="endPrice != null" >
        end_price = #{endPrice,jdbcType=DECIMAL},
      </if>
      <if test="topPrice != null" >
        top_price = #{topPrice,jdbcType=DECIMAL},
      </if>
      <if test="bottomPrice != null" >
        bottom_price = #{bottomPrice,jdbcType=DECIMAL},
      </if>
      <if test="beginPrice != null" >
        begin_price = #{beginPrice,jdbcType=DECIMAL},
      </if>
      <if test="previousPrice != null" >
        previous_price = #{previousPrice,jdbcType=DECIMAL},
      </if>
      <if test="shakePrice != null" >
        shake_price = #{shakePrice,jdbcType=DECIMAL},
      </if>
      <if test="shakeRate != null" >
        shake_rate = #{shakeRate,jdbcType=DECIMAL},
      </if>
      <if test="turnRate != null" >
        turn_rate = #{turnRate,jdbcType=DECIMAL},
      </if>
      <if test="tradeQuote != null" >
        trade_quote = #{tradeQuote,jdbcType=DECIMAL},
      </if>
      <if test="tradeAmount != null" >
        trade_amount = #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="unfrozenAmount != null" >
        unfrozen_amount = #{unfrozenAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeNumber != null" >
        trade_number = #{tradeNumber,jdbcType=DECIMAL},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="stock.history.dal.model.OrderInfo" >
    update order_info
    set trade_date = #{tradeDate,jdbcType=DATE},
      stock_id = #{stockId,jdbcType=VARCHAR},
      end_price = #{endPrice,jdbcType=DECIMAL},
      top_price = #{topPrice,jdbcType=DECIMAL},
      bottom_price = #{bottomPrice,jdbcType=DECIMAL},
      begin_price = #{beginPrice,jdbcType=DECIMAL},
      previous_price = #{previousPrice,jdbcType=DECIMAL},
      shake_price = #{shakePrice,jdbcType=DECIMAL},
      shake_rate = #{shakeRate,jdbcType=DECIMAL},
      turn_rate = #{turnRate,jdbcType=DECIMAL},
      trade_quote = #{tradeQuote,jdbcType=DECIMAL},
      trade_amount = #{tradeAmount,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      unfrozen_amount = #{unfrozenAmount,jdbcType=DECIMAL},
      trade_number = #{tradeNumber,jdbcType=DECIMAL}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>